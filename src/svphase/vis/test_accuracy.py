import os
import numpy as np
import pandas as pd
import matplotlib as mpl
from matplotlib import pyplot as plt
from svphase.analyze.compare_model_stats import main as compare_model_stats
from svphase.utils.config import FONT, COLORS

def _get_model_and_version(model_stat):
	fname = os.path.basename(model_stat).split('.')
	return fname[0], '.'.join(fname[1:3])

def plot(labels, model_stats, low_ylim=0.40, high_ylim=1.00):
	assert len(labels) == len(model_stats)
	statsdf = compare_model_stats(model_stats)
	original_order = pd.DataFrame(np.arange(len(model_stats)), index=pd.MultiIndex.from_tuples(map(_get_model_and_version, model_stats)), columns=['original_idx'])
	#print original_order

	statsdf = pd.concat([statsdf, original_order], axis=1).reset_index().set_index('original_idx').sort_index()
	labels = [l.replace('\\n','\n') for l in labels]
	print statsdf
	print labels

	fig = plt.figure(figsize=(8,3), facecolor='white', edgecolor='none')
	mpl.rc('font', **FONT)
	ax = fig.add_subplot(111)
	
	#ax.bar(np.zeros(len(labels)), np.ones(len(labels), dtype=float), color='0.9', linewidth=0)
	ax.bar(np.arange(len(labels), dtype=float)+0.1, statsdf['avg'].values, yerr=statsdf['std'].values, color=COLORS['cor'], linewidth=0) 
	
	ax.set_xticks(np.arange(len(labels),dtype=float)+0.5)
	ax.set_xticklabels(tuple(labels), rotation=80, multialignment='center')
	ax.set_ylabel('Avg. test accuracy')

	ax.set_ylim(low_ylim, high_ylim)

	ax.set_frame_on(False)
	ax.get_yaxis().tick_left()
	ax.yaxis.set_major_formatter(plt.FormatStrFormatter('%0.2f'))
	ax.get_xaxis().tick_bottom()
	#ax.axes.get_xaxis().set_visible(False)
	fig.tight_layout()
	plt.show()

if __name__=='__main__':
	import argparse
	
	parser = argparse.ArgumentParser(description='Plot test accuracies for different methods')
	
	parser.add_argument('labels', help="Labels for each model separated by commas")
	parser.add_argument('model_stats', nargs='+', help="Stat files generated by each model")

	args = parser.parse_args()
	plot(args.labels.split(','), args.model_stats)
